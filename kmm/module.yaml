apiVersion: v1
kind: ConfigMap
metadata:
  name: pt_char_dev_dockerfile
data:
  Dockerfile:
    ARG DTK_AUTO
    FROM ${DTK_AUTO} as builder
    ARG KERNEL_VERSION
    WORKDIR /usr/src
    RUN ["git", "clone", "https://github.com/rh-ecosystem-edge/kernel-module-management.git"]
    WORKDIR /usr/src/simple_char_dev/
    RUN KERNEL_SRC_DIR=/lib/modules/${KERNEL_VERSION}/build make all
    FROM registry.redhat.io/ubi9/ubi-minimal
    ARG KERNEL_VERSION
    RUN ["microdnf", "install", "-y", "kmod"]
    COPY --from=builder /usr/src/simple_char_dev/simple_char_dev.ko /opt/lib/modules/${KERNEL_VERSION}/
    RUN depmod -b /opt ${KERNEL_VERSION}


---
apiVersion: kmm.sigs.x-k8s.io/v1beta1
kind: Module
metadata:
  name: pt_char_dev
spec:
  moduleLoader:
    container:
      modprobe:
        moduleName: ptemplate_char_dev
        dirName: /opt  # Optional
        parameters:  # Optional
          - max_dev=5
          - default_msg=ptemplate
      imagePullPolicy: Always  # optional
      kernelMappings:  # At least one item is required
        - regexp: '^.+\el9\.x86_64$'
          containerImage: "some.registry/org/my-kmod:${KERNEL_FULL_VERSION}"
          build:
            baseImageRegistryTLS:
              # Optional and not recommended! If true, the build will be allowed to pull the image in the Dockerfile's
              # FROM instruction using plain HTTP.
              insecure: false
              # Optional and not recommended! If true, the build will skip any TLS server certificate validation when
              # pulling the image in the Dockerfile's FROM instruction using plain HTTP.
              insecureSkipTLSVerify: false
            dockerfileConfigMap:  # Required
              name: pt_char_dev_dockerfile
          registryTLS:
            # Optional and not recommended! If true, KMM will be allowed to check if the container image already exists
            # using plain HTTP.
            insecure: false
            # Optional and not recommended! If true, KMM will skip any TLS server certificate validation when checking if
            # the container image already exists.
            insecureSkipTLSVerify: false
  imageRepoSecret:  # Optional. Used to pull ModuleLoader and device plugin images
    name: secret-name
  selector:
    node-role.kubernetes.io/worker: ""
